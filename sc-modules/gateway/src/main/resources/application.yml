server:
  port: 8605
spring:
  application:
    name: api-gateway
  cloud:
    loadbalancer:
      retry:
        enabled: true
eureka:
  client:
    serviceUrl:
      defaultZone: http://xiaoliu:admin@localhost:8606/eureka/
zuul:
  # 禁止服务名路由
  ignored-services: "*"
  # 路由前缀
  prefix: /api
  # 路由后是否跳过前缀，默认就是true，表示路由后的地址不包含前缀
  strip-prefix: true
  # 配置路由
  routes:
    chart-service:
      path: /auth/**
    config-client-service:
      path: /config/**
    kafka-producer-service:
      path: /kafka/producer/**
    kafka-consumer-service:
      path: /kafka/consumer/**
    rocketmq-producer-service:
      path: /rocketmq/producer/**
    rocketmq-consumer-service:
      path: /rocketmq/consumer/**
    sentinel-service:
      path: /sentinel/**
    unit-test-service:
      path: /ut/**
    consumer-service:
      path: /consumer/**
    provider-service:
      path: /provider/**
    provider-service-a:
      path: /provider-a/**
    customer-service-x:
      path: /customer-x/**
  # 重试机制
  retryable: true
#  add-host-header: true
#  sensitive-headers:
#  host:
#    socket-timeout-millis: 60000
#    connect-timeout-millis: 60000

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

# 暴露actuator的所有端点
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'

ribbon:
  # 连接的超时时间
  ConnectTimeout: 1000
  # 请求的超时时间
  ReadTimeout: 1000
  # 是否所有操作都支持重试
  OkToRetryOnAllOperations: true
  # 最大重试次数（表示第一次失败后可以重试的最大次数）
  MaxAutoRetries: 1
  # 最大重试的服务实例数（表示除第一个实例外，可以重试的最大实例数（n），结合MaxAutoRetries（m），最多会请求(n + 1) * (m + 1)次，
  # 如果服务实例数小于n+1，则再次遍历服务列表）
  MaxAutoRetriesNextServer: 1
#  eureka:
#    enabled: true

# 日志配置
logging:
  config: classpath:log4j2.yml
  level:
    root: warn

# swagger 配置
swagger:
  show: true
#  servlet-path: /
#security:
#  basic:
#    enabled: false
#  oauth2:
#    resource:
#      prefer-token-info: false
